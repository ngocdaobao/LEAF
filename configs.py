import argparse

def parse_arguments():
    parser = argparse.ArgumentParser()

    parser.add_argument('--task_ep_time', default=1, type=int, help="Number of time of epoch for each task compared to base task")
    parser.add_argument('--freeze_embedding_layer', action='store_true')
    parser.add_argument('--freeze_encoder_layers', default=0, type=int, help="Number of encoder layers to freeze")
    parser.add_argument('--classifier_layer', default=1, type=int, help="Number of classifier layers")
    parser.add_argument('--hidden_dim', default=128, type=int, help="Hidden dimension of classifier")
    parser.add_argument('--dropout', default=0.1, type=float, help="Dropout rate")
    parser.add_argument("--use_lora", action="store_true", help="Enable LoRA adaptation")
    parser.add_argument("--lora_rank", type=int, default=8)
    parser.add_argument("--lora_alpha", type=int, default=32)
    parser.add_argument("--lora_dropout", type=float, default=0.1)
    parser.add_argument("--skip_eval_ep", type=int, default=0, help="Skip evaluation for the first n epochs")
    parser.add_argument("--task_ep", type=int, default=10, help="Number of epochs for each task")
    parser.add_argument("--use_mole", action="store_true")
    parser.add_argument("--mole_num_experts", type=int, default=4)
    parser.add_argument("--mole_top_k", type=int, default=2)
    parser.add_argument("--uniform_ep", type=int, default=20, help="Number of epochs for mole uniform")
    parser.add_argument("--use_general_expert", action="store_true", help="Use general expert for MoLE")
    parser.add_argument("--general_expert_weight", type=float, default=0.1, help="Weight for general expert")
    parser.add_argument("--entropy_weight", type=float, default=0.01, help="Weight for entropy loss")
    parser.add_argument("--load_balance_weight", type=float, default=1, help="Weight for loss balance")
    parser.add_argument("--step_size", type=int, default=10, help="Step size for learning rate decay")
    parser.add_argument("--gammalr", type=float, default=0.1, help="Gamma for learning rate decay")
    parser.add_argument("--gradient_checkpointing", action="store_true", help="Enable gradient checkpointing")
    parser.add_argument("--eval_batch_size", type=int, default=256, help="Batch size for evaluation")
    parser.add_argument("--wandb", action="store_true", help="Enable Weights & Biases logging")
    parser.add_argument("--eval_ratio", type=float, default=0.1, help="Ratio of data for evaluation")
    parser.add_argument("--gating", type=str, default="softmax", choices=["softmax", "sigmoid", "tanh"], help="Gating mechanism for MoLE")
    parser.add_argument("--backbone_path", type=str, default="", help="Path to the backbone model")
    parser.add_argument("--print_trainable_params", action="store_true", help="Print trainable parameters")
    parser.add_argument("--project_name", type=str, default="HANet_mole", help="Project name for Weights & Biases")
    parser.add_argument("--label_descriptions", type=str, default='data/label_descriptions')
    
    parser.add_argument('--seed', default=42, type=int)
    parser.add_argument('--skip_first', action='store_true')
    parser.add_argument('--log_dir', default='./outputs/log_terminal/02_10_nomap_clreps')
    parser.add_argument('--tb_dir', default='./outputs/log_tensorboard/02_10_nomap_clreps')
    parser.add_argument('--save_dir', default='')
    parser.add_argument('--cresume', default='')
    parser.add_argument('--parallel', default='single', choices=['single', 'DP', 'DDP'])
    parser.add_argument('--device_ids', default='0,1')
    parser.add_argument("--local_rank", type=int, default=0)
    parser.add_argument("--world_size", type=int, default=4)
    parser.add_argument("--amp", action='store_true') 
    parser.add_argument('--perm_id', default=0, type=str, choices=[str(i) for i in range(5)])
    parser.add_argument('--dataset', default='MAVEN', choices=['MAVEN', 'ACE'])
    parser.add_argument('--stream_root', default='./data/data_ids', type=str)
    parser.add_argument('--max_seqlen', default=120)
    parser.add_argument('--adamw_eps', default=1e-7)
    parser.add_argument('--fixed_enum', default=True, type=bool, help="whether to fix the exemplar number")
    parser.add_argument('--enum', default=1, type=int, help="When 'fixed_num' == False, indicates the the whole memory size\
                                                            when 'fixed_num' == True, indicates every class's exemplar num")
    parser.add_argument('--temperature', default=2)
    parser.add_argument('--task_num', default=5, type=int)
    parser.add_argument('--early_stop', action='store_true')
    parser.add_argument('--patience', type=int, default=2)
    parser.add_argument('--eval_freq', type=int, default=5)

    parser.add_argument('--input_map', action='store_true', help="Whether to use input mapping, if False, use span_s to predict trigger type")
    parser.add_argument('--class_num', type=int, default=10)
    parser.add_argument('--shot_num', default=5, type=int)
    parser.add_argument('--e_weight', default=50)
    parser.add_argument('--no_replay', action='store_true')
    parser.add_argument('--period', type=int, default=10)
    parser.add_argument('--epochs', default=20, type=int) 
    parser.add_argument('--batch_size', default=4, type=int)
    parser.add_argument('--device', default="cuda:2", help='set device cuda or cpu')
    parser.add_argument('--log', action='store_true') 
    parser.add_argument('--log_name', default='temp')
    parser.add_argument('--data_root', default='./data_incremental', type=str)
    parser.add_argument('--backbone', default='bert-base-uncased', help='Feature extractor')
    parser.add_argument('--lr',type=float, default=2e-5)
    parser.add_argument('--decay', type=float, default=1e-4, help="")
    parser.add_argument('--no_freeze_bert', action='store_true')
    parser.add_argument('--dweight_loss', type=bool, default=True)
    parser.add_argument('--alpha', type=float, default=2.0)
    parser.add_argument('--beta', type=float, default=3.0)
    parser.add_argument('--distill', default='mul', choices=["fd", "pd", "mul", "none"])
    parser.add_argument('--rep_aug', default='mean', choices=["none", "mean", "relative"])
    parser.add_argument('--gamma', type=float, default=1)
    parser.add_argument('--theta',type=float, default=6)
    parser.add_argument('--cl_temp', type=float, default=0.07)
    parser.add_argument('--ucl', type=bool, default=True)
    parser.add_argument('--cl_aug', default='shuffle', choices=["dropout", "shuffle", "RTR", "none"])
    parser.add_argument('--sub_max', type=bool, default=True)
    parser.add_argument('--leave_zero', action='store_true')
    parser.add_argument('--single_label', type=bool, default=True)
    parser.add_argument('--aug_repeat_times', type=int, default=10)
    parser.add_argument('--joint_da_loss', default="ce", choices=["none", "ce", "dist", "mul"])
    parser.add_argument('--tlcl', action="store_true")
    parser.add_argument('--skip_first_cl', choices=["ucl", "tlcl", "ucl+tlcl", "none"], default="ucl+tlcl")
    parser.add_argument('--method', type=str)
    parser.add_argument('--my_test', default=False, type=bool)
    parser.add_argument('--use_description', action='store_true')
    parser.add_argument('--num_description', default=1, type=int)
    parser.add_argument('--ratio_loss_des_cl', default=1, type=float)
    parser.add_argument('--weight_loss_tlcl', default=1, type=float)
    parser.add_argument('--ratio_loss_final_stage', default=1, type=float)
    parser.add_argument('--loss_des_type', default="2", choices=["1", "2"])
    
    # Args for CrossEntropyLossWithWeight
    parser.add_argument('--use_weight_ce', action='store_true')
    parser.add_argument('--alpha_ce', default=0.7, type=float)
    
    # Args for Augment
    parser.add_argument('--num_augmention', default=1, type=int)
    parser.add_argument('--gpt_augmention', action='store_true')
    parser.add_argument('--decrease_0_gpt_augmention', action='store_true')
    parser.add_argument('--ratio_loss_gpt', default=1, type=float)
    
    parser.add_argument('--save_output', default="output_logg", type=str)
    parser.add_argument('--skip_des', action='store_true')
    
    parser.add_argument('--distill_imp', action='store_true')
    parser.add_argument('--topk_ratio', default=0.5, type=float)
    parser.add_argument('--ratio_loss_distill', default=5, type=float)
    
    args, _ = parser.parse_known_args()

    return args